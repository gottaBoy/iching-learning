#java.util.logging.manager=
## RootLogger处理器（获取时设置）
handlers= java.util.logging.ConsoleHandler
## RootLogger处理器（打印日志时设置）
.handlers= RootLogger.java.util.logging.FileHandler
# RootLogger日志等级
.level= INFO

## TestLog日志处理器
TestLog.handlers= java.util.logging.FileHandler
# TestLog日志等级
TestLog.level= INFO
# 忽略父日志处理
TestLog.useParentHandlers=false

## 控制台处理器
# 输出日志级别
java.util.logging.ConsoleHandler.level = INFO
# 输出日志格式
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter


## 文件处理器
# 输出日志级别
java.util.logging.FileHandler.level=INFO
# 输出日志格式 #java.util.logging.SimpleFormatter
java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter
# 输出日志文件路径
java.util.logging.FileHandler.pattern = ./tmp/TestLog.log
# 输出日志文件限制大小（50000字节）
java.util.logging.FileHandler.limit = 50000
# 输出日志文件限制个数
java.util.logging.FileHandler.count = 1
# 输出日志文件 是否是追加
java.util.logging.FileHandler.append=true


## 文件处理器
# 输出日志级别
RootLogger.java.util.logging.FileHandler.level=INFO
# 输出日志格式
RootLogger.java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
# 输出日志文件路径
RootLogger.java.util.logging.FileHandler.pattern = ./tmp/RootLogger.log
# 输出日志文件限制大小（50000字节）
RootLogger.java.util.logging.FileHandler.limit = 50000
# 输出日志文件限制个数
RootLogger.java.util.logging.FileHandler.count = 10
# 输出日志文件 是否是追加
RootLogger.java.util.logging.FileHandler.append=true
